//---------------------------------------------------------------------------
#pragma hdrstop
#include "Unit2.h"
#pragma package(smart_init)
//---------------------------------------------------------------------------
TListItem::TListItem()
{
    next=NULL;
    value=0;
}
//---------------------------------------------------------------------------
void TListItem::Add(int v)
{
    TListItem *p;
    p=this;
    while(p->next)
    {
        p=p->next;
    }
    p->next=new TListItem;       
    p->next->value=v;          
}
//---------------------------------------------------------------------------
void Delete(TListItem *&l)
{
    if(l)
    {                         
        Delete(l->next);
    }
    delete l;
}
//---------------------------------------------------------------------------
TListItem::~TListItem()
{
    //Delete(next);
}
//---------------------------------------------------------------------------
TListItem TListItem::Init(int v)
{
    value=v;
    return *this;
}
//---------------------------------------------------------------------------
void TListItem::print()
{
    TListItem *p;
    int i=0;
    p=this;
    while(p)
    {
        cout<<p->value<<"*x^"<<i;
        if(p->next)
        {
            cout<<'+';
        }
        p=p->next;
        i++;
    }
}
//---------------------------------------------------------------------------
void TListItem::Add(int n,int v,...)
{
    int i;
    int *pt;
    Add(v);
    if( n<=1 )
    {
        return;
    }
    pt=&v+1;
    for(i=0;i<n-1;i++)
    {
        Add(*pt);
        pt++;
    }
}
//---------------------------------------------------------------------------
void TListItem::Del()
{
    Delete(next);
}
//---------------------------------------------------------------------------
TListItem TListItem::Copy()
{
    TListItem *p,R;
    p=this;
    R.Init(p->value);
    p=p->next;
    while(p)
    {
        R.Add(p->value);
        p=p->next;
    }
    return R;
}
//---------------------------------------------------------------------------
void TListItem::Input()
{
    int n,i;
    int v;
    cout<<"n=";
    cin>>n;
    i=0;
    cout<<"a["<<i<<"]=";
    cin>>v;
    Init(v);
    for(i++;i<=n;i++)
    {
        cout<<"a["<<i<<"]=";
        cin>>v;
        Add(v);
    }
}
//---------------------------------------------------------------------------
void Create(TList L)
{
    TListItem
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
 