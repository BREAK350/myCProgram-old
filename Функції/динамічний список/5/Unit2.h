//---------------------------------------------------------------------------
#ifndef Unit2H
#define Unit2H
#include <iostream.h>
typedef int change;
//---------------------------------------------------------------------------
class TList;
//---------------------------------------------------------------------------
class TListItem
{
    private:
        change value;
        TListItem *next;
    public:
        TListItem();
        ~TListItem();
        change GetValue();
        void SetValue(change);
        void SetNext(TListItem *);
        TListItem* GetNext();
        friend void _Delete_(TList &);
        friend void _delete_(TListItem *&);
};
//---------------------------------------------------------------------------
class TList
{
    private:
        int n;
        TListItem *first;
    public:
        //     -1-
        TList(); // конструктор за замовчуванням
        TList(const TList &); // конструктор копіювання
        ~TList(); // деструктор
        void Init(int,change *); // ввід
        void Display()const; // вивід
        //     -2-
        change GetValue(int);  // функції-члени...
        void SetValue(change,int);
        change ValueIn(change);
        TList ChangeXToXPlusA(change)const;
        friend void _Delete_(TList &); // дружня функція
        //     -3-
        TList& operator = (const TList &); // оператор присвоєння
        TList operator + (const TList &)const; // перезавантажені оператори...
        TList operator - (const TList &)const;
        TList operator * (const TList &)const;
        bool operator == (const TList &)const;

};
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
#endif
 