//---------------------------------------------------------------------------
#pragma hdrstop
#pragma argsused
#include <math.h>
#include <iostream.h>
#include <conio.h>
#include "Distance.h"
//---------------------------------------------------------------------------
T_Distance::TPoint Line(const double &t)
{
    T_Distance::TPoint r;
    r.x=t;
    r.y=0;
    return r;
}
//---------------------------------------------------------------------------
T_Distance::TPoint Ellipse(const double &t)
{
    T_Distance::TPoint r;
    r.x=10*cos(t);
    r.y=5*sin(t);
    return r;
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
T_Distance::TPoint Triangle(const double &t)
{
    T_Distance::TPoint r;

    double mt=Normalization(t);
    mt=3*mt;
    if(mt>=0 && mt<1)
    {
        r.x=4*mt;
        r.y=0;
    }
    else
    if(mt>=1 && mt<2)
    {
        mt-=1;
        r.x=-4*mt+4;
        r.y=4*mt;
    }
    else
    if(mt>=2 && mt<=3)
    {
        mt-=2;
        r.x=0;
        r.y=-4*mt+4;
    }
    return r;
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
int main(int argc, char* argv[])
{
    T_Distance::TPoint p;
    T_Distance D(0.01,Triangle);
    double t=-1;
    while(t<2)
    {
        p=D.NextPoint(t,0.1);
        cout<<p.x<<' '<<p.y<<endl;
        t=t+0.05;
    }
    getch();
    return 0;
}
//---------------------------------------------------------------------------
 