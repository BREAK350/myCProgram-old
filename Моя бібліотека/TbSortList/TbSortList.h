//---------------------------------------------------------------------------
#ifndef TbSortListH
#define TbSortListH
#include <stdio.h>
typedef int TData;
//---------------------------------------------------------------------------
class TbSortList
{
    private:
        struct TbItem
        {
            TData *Data;
            TbItem *Next,*Prev,*Up,*Down;
            TbItem()
            {
                Data=NULL;
                Next=Prev=Up=Down=NULL;
            }
            TbItem(const TData &Data)
            {
                this->Data=new TData(Data);
                Next=Prev=Up=Down=NULL;
            }
        };
        TbItem *Head;
        int Count,SeparateCount; // נמחה³כ‏גאק
    public:
        TbSortList(const int &SeparateCount)
        {
            this->SeparateCount=(SeparateCount>3)?(SeparateCount):(4);
            Count=0;
            Head=NULL;
        }

        void Add(const TData &Data)
        {
            if(Head)
            {
                if(Head->Data)
                {
                    
                }
            }
            else
            {
                Head=new TbItem(Data);
                Count=1;
            }
        }
};
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
#endif
 