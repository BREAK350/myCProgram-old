//---------------------------------------------------------------------------
#pragma hdrstop
#include "TbVirtualSpace.h"
#pragma package(smart_init)
// TbVirtualSpace
//---------------------------------------------------------------------------
double TbVirtualSpace::GetDistance(const TbSpacePoint2Data &First,
								   const TbSpacePoint2Data &Second)const
{
	return 0;
}
//---------------------------------------------------------------------------
TPoint TbVirtualSpace::GetTPoint(const TbSpacePoint2Data &Point)const
{
	return TPoint(0,0);
}
//---------------------------------------------------------------------------
double TbVirtualSpace::GetModule(const TbSpacePoint2Data &Point)const
{
	return 0;
}
//---------------------------------------------------------------------------
void TbVirtualSpace::InitDefault(TbSpacePoint2Data &Point)const
{
	Point.X=0;
	Point.Y=0;
}
//---------------------------------------------------------------------------
void TbVirtualSpace::Init(TbSpacePoint2Data &Point,
			const double &X,const double &Y)const
{
	Point.X=X;
	Point.Y=Y;
}
//---------------------------------------------------------------------------
TbVirtualSpace::TbSpacePoint2Data TbVirtualSpace::
	Summ(const TbSpacePoint2Data &First,const TbSpacePoint2Data &Second)const
{
	return TbSpacePoint2Data(0,0);
}
//---------------------------------------------------------------------------
TbVirtualSpace::TbSpacePoint2Data TbVirtualSpace::
	Different(const TbSpacePoint2Data &First,
	const TbSpacePoint2Data &Second)const
{
	return TbSpacePoint2Data(0,0);
}
//---------------------------------------------------------------------------
TbVirtualSpace::TbSpacePoint2Data TbVirtualSpace::
	Mult(const TbSpacePoint2Data &Point,const double &Number)const
{
	return TbSpacePoint2Data(0,0);
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
// TbVirtualSpace::TbSpacePoint2Data
//---------------------------------------------------------------------------
TbVirtualSpace::TbSpacePoint2Data::TbSpacePoint2Data()
{
	X=0;
	Y=0;
}
//---------------------------------------------------------------------------
TbVirtualSpace::TbSpacePoint2Data::
	TbSpacePoint2Data(const double &X,const double &Y)
{
	this->X=X;
	this->Y=Y;
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
// TbVirtualSpace::TbSpacePoint2
//---------------------------------------------------------------------------
TbVirtualSpace::TbSpacePoint2::TbSpacePoint2(const TbVirtualSpace *VSpace)
{
	VSpace->InitDefault(Point);
}
//---------------------------------------------------------------------------
TbVirtualSpace::TbSpacePoint2::TbSpacePoint2(const double &X,const double &Y,
	const TbVirtualSpace *VSpace)
{
	VSpace->Init(Point,X,Y);
}
//---------------------------------------------------------------------------
double TbVirtualSpace::TbSpacePoint2::GetDistance(const TbSpacePoint2 &Point,
					const TbVirtualSpace *VSpace)const
{
	return VSpace->GetDistance(this->Point,Point.Point);
}
//---------------------------------------------------------------------------
void TbVirtualSpace::TbSpacePoint2::Init(const double &X,const double &Y,
								const TbVirtualSpace *VSpace)
{
	VSpace->Init(Point,X,Y);
}
//---------------------------------------------------------------------------
TPoint TbVirtualSpace::TbSpacePoint2::GetTPoint(const TbVirtualSpace *VSpace)const
{
	return VSpace->GetTPoint(Point);
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
// TbSpaceVector2d
//---------------------------------------------------------------------------
TbSpaceVector2d::TbSpaceVector2d(const TbVirtualSpace *VSpace)
	:TbVirtualSpace::TbSpacePoint2(VSpace)
{
}
//---------------------------------------------------------------------------
TbSpaceVector2d::TbSpaceVector2d(const double &X,const double &Y,
	const TbVirtualSpace *VSpace):TbVirtualSpace::TbSpacePoint2(X,Y,VSpace)
{
}
//---------------------------------------------------------------------------
double TbSpaceVector2d::GetModule(const TbVirtualSpace *VSpace)const
{
	return VSpace->GetModule(Point);
}
//---------------------------------------------------------------------------
TbSpaceVector2d TbSpaceVector2d::Add(const TbSpaceVector2d &SVector,
	const TbVirtualSpace *VSpace)const
{
	TbSpaceVector2d res(VSpace);
	res.Point=VSpace->Summ(this->Point,SVector.Point);
	return res;
}
//---------------------------------------------------------------------------
TbSpaceVector2d TbSpaceVector2d::Sub(const TbSpaceVector2d &SVector,
	const TbVirtualSpace *VSpace)const
{
	TbSpaceVector2d res(VSpace);
	res.Point=VSpace->Different(this->Point,SVector.Point);
	return res;
}
//---------------------------------------------------------------------------
TbSpaceVector2d TbSpaceVector2d::Mult(const double &Number,
	const TbVirtualSpace *VSpace)const
{
	TbSpaceVector2d res(VSpace);
	res.Point=VSpace->Mult(this->Point,Number);
	return res;
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
