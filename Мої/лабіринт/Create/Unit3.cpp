//---------------------------------------------------------------------------
#pragma hdrstop
#include "Unit3.h"
#pragma package(smart_init)
//---------------------------------------------------------------------------
TPolinom::TPolinom():TList()
{
    N++;
    number=N;
}
//---------------------------------------------------------------------------
TPolinom::TPolinom(int _n,const TComplex *_c):TList(_n,_c)
{
    N++;
    number=N;
}
//---------------------------------------------------------------------------
TPolinom::TPolinom(const TPolinom &p):TList(*this)
{
    N++;
    number=N;
}
//---------------------------------------------------------------------------
TComplex TPolinom::operator [] (int k)
{
    int i;
    if(k<0 || k>=n)
    {
        return TComplex(0,0);
    }
    i=0;
    TListItem *t=first;
    while(i<k)
    {
        i++;
        t=t->GetNext();
    }
    return t->GetValue();
}
//---------------------------------------------------------------------------
TPolinom::~TPolinom()
{
    N--;
}
//---------------------------------------------------------------------------
TPolinom& TPolinom::operator = (TList L)
{
    (TList)(*this)=L;
    return *this;
}
//---------------------------------------------------------------------------
TPolinom& TPolinom::operator = (const TPolinom &p)
{
    return *this=p;
}
//---------------------------------------------------------------------------
TPolinom TPolinom::Power(int sn)
{
    int i;
    TComplex c(1,1);
    TList d=(*this),r(1,&c);
    for(i=0;i<sn;i++)
    {
        r=r*d;
    }
    //return r;
}
//---------------------------------------------------------------------------
void TPolinom::CreateConjugate()
{
    TListItem *t=first;
    while(t)
    {
        t->CreateConjugate();
        t=t->GetNext();
    }
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
