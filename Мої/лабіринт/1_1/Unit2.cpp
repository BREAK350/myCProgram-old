//---------------------------------------------------------------------------
#pragma hdrstop
#include "Unit2.h"
#pragma package(smart_init)
//---------------------------------------------------------------------------
TMatrix::TMatrix()
{
    n=m=0;
    l=NULL;
}
//---------------------------------------------------------------------------
void TMatrix::Draw(TImage *Image)
{
    int i,j;
    for(i=0;i<=7;i++)
    {
        Image->Canvas->MoveTo(0,i*50);
        Image->Canvas->LineTo(350,i*50);
        Image->Canvas->MoveTo(i*50,0);
        Image->Canvas->LineTo(i*50,350);
    }
}
//---------------------------------------------------------------------------
void TMatrix::Draw1(TImage *Image)
{
    int i,j;
    if(!l)
    {
        return;
    }
    for(i=0;i<7;i++)
    {
        for(j=0;j<7;j++)
        {
            if(x-3+j>=0 && x-3+j<m && y-3+i>=0 && y-3+i<n)
            {
                if(l[y-3+i][x-3+j]==1)
                {
                    Image->Canvas->Rectangle(j*50,i*50,(j+1)*50,(i+1)*50);
                }
            }
        }
    }
}
//---------------------------------------------------------------------------
void TMatrix::Random()
{
    int i,j;
    randomize();
    n=7+random(10);
    m=7+random(10);
    l=new char*[n];
    for(i=0;i<n;i++)
    {
        l[i]=new char[m];
        for(j=0;j<m;j++)
        {
            l[i][j]=random(2);
        }
    }
    x=random(m);
    y=random(n);
}
//---------------------------------------------------------------------------
void TMatrix::Clear(TImage *Image)
{
    Image->Canvas->Rectangle(0,0,350,350);
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
 