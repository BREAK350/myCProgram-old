//---------------------------------------------------------------------------
#ifndef Unit2H
#define Unit2H
#include <vcl.h>
#include <vector.h>
#include "TbMatrix.h"
//---------------------------------------------------------------------------
class Drawable
{
	public:
		virtual void onPaint(TCanvas *canvas, const TRect &rect) {}
};
//---------------------------------------------------------------------------
class TPlayer:public Drawable
{
	private:
		TPoint position;
};
//---------------------------------------------------------------------------
class AbstractElement:public Drawable
{
	public:
		virtual void onEntered(TPlayer &player) {}
		virtual void onMove(const TPoint &pos, TPlayer &player) {}
		virtual void onExit(TPlayer &player) {}
};
//---------------------------------------------------------------------------
class AbstractLabirynt
{
	public:

};
//---------------------------------------------------------------------------
class Labirynt2D // поверх
{
	private:
		TbMatrix<AbstractElement> matrix;
	public:

};
//---------------------------------------------------------------------------
class Labirynt3D
{
	private:
		vector<Labirynt2D> floors;
	public:
};
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
#endif
