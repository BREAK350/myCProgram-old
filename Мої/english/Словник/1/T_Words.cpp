//---------------------------------------------------------------------------
#pragma hdrstop
#include "T_Words.h"
#pragma package(smart_init)
//---------------------------------------------------------------------------
T_Words::T_Words()
{
    File=NULL;
    fName=NULL;
    N=0;
}
//---------------------------------------------------------------------------
T_Words::~T_Words()
{
    Close();
}
//---------------------------------------------------------------------------
void T_Words::Open(const char *fname)
{
    Close();
    File=fopen(fname,"r");
    if(File)
    {
        fName=strdup(fname);
        fscanf(File,"%d\n",&N);
        return;
    }
    File=fopen(fname,"w");
    fprintf(File,"%d\n",N);
    fclose(File);
    Open(fname);
}
//---------------------------------------------------------------------------
void T_Words::Close()
{
    fclose(File);
    delete fName;
    File=NULL;
    fName=NULL;
    N=0;
}
//---------------------------------------------------------------------------
void T_Words::New(const char *fname)
{
    Close();
    File=fopen(fname,"w");
    fprintf(File,"%d\n",N);
    fclose(File);
    Open(fname);
}
//---------------------------------------------------------------------------
int T_Words::Add(const char *Str)
{
    int i=0;
    const int Size=1024;
    char buf[Size];
    while(i<N)
    {
        fgets(buf,Size,File);
        if(strcmp(Str,buf)<0)
        {
            break;
        }
        i++;
    }
    Add(Str,i);
    return i;
}
//---------------------------------------------------------------------------
void T_Words::Add(const char *Str,const int n)
{
    int i=0;
    FILE *f=fopen("Bak.bak","w");
    Open(fName);
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
 