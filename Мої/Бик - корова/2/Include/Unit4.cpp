//---------------------------------------------------------------------------
#pragma hdrstop
#include "Unit4.h"
#pragma package(smart_init)
//---------------------------------------------------------------------------
TbCPlural_char::TbCPlural_char(const char *Item,const int &Found)
    :TbPlural_char(Item)
{
    if(GetCount()>0)
    {
        this->Found=(Found>0 && Found<=GetCount())?(Found):(0);
    }
    else
    {
        this->Found=0;
    }
}
//---------------------------------------------------------------------------
TbCPlural_char::TbCPlural_char(const TbCPlural_char &CPl)
    :TbPlural_char(CPl)
{
    Found=CPl.Found;
}
//---------------------------------------------------------------------------
TbCPlural_char::TbCPlural_char(const TbPlural_char &Pl)
    :TbPlural_char(Pl)
{
    Found=0;
}
//---------------------------------------------------------------------------
TbCPlural_char& TbCPlural_char::operator = (const TbCPlural_char &CPl)
{
    if(this!=&CPl)
    {
        TbPlural_char::operator = (CPl);
        Found=CPl.Found;
    }
    return *this;
}
//---------------------------------------------------------------------------
char* TbCPlural_char::GetStr()const
{
    char *prev=TbPlural_char::GetStr(),buf[128];
    sprintf(buf,"%s(%d)",prev,Found);
    delete prev;
    return strdup(buf);
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
 