//---------------------------------------------------------------------------
#pragma hdrstop
#include "bc_workspace.h"
#pragma package(smart_init)
//---------------------------------------------------------------------------
void TbDigit::SetRandom()
{
    int i;
    Count=0;
    while(Count<10)
    {
        do
        {
            i=0;
            Digit[Count]=random(10);
            while(i<Count && Digit[Count]!=Digit[i])
            {
                i++;
            }
        }
        while(i<Count);
        Count++;
    }
}
//---------------------------------------------------------------------------
TbBCWS::TbBCWS()
{
    Count=0;
    Digit.SetRandom();
}
//---------------------------------------------------------------------------
void TbBCWS::Add(const TbProgress &prog)
{
    if(Count<MaxSize)
    {
        int i;
        if(prog.GetFound()>0)
        {
            for(i=0;i<6;i++)
            {
                WS[Count].Data[i]=prog.Data[i];
            }
            Count++;
        }
        else
        {
            int j;
            for(i=0;i<4;i++)
            {
                j=0;
                while(j<Digit.Count && prog.Data[i]!=Digit.Digit[j])
                {
                    j++;
                }
                if(j<Digit.Count)
                {
                    Digit.Count--;
                }
                while(j<Digit.Count)
                {
                    Digit.Digit[j]=Digit.Digit[j+1];
                    j++;
                }
            }
        }
    }
}
//---------------------------------------------------------------------------
TbProgress TbBCWS::GetNextProgres()
{
    int i;
    TbProgress r;
    if(Count==0)
    {
        for(i=0;i<4;i++)
        {
            r.Data[i]=Digit.Digit[i];
        }
    }
    else
    if(Count==1)
    {
        for(i=0;i<4;i++)
        {
            r.Data[i]=Digit.Digit[i+4];
        }
    }
    else
    {
    }
    return r;
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
