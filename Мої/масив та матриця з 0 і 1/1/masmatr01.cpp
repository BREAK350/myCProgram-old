//---------------------------------------------------------------------------
#pragma hdrstop
#include "masmatr01.h"
#define St2(n) (1<<(n))
#define ReadBit(a,n) ((((a)&St2(n))>0)?(1):(0))
#define WriteBit1(a,n) ((a)|St2(n))
//---------------------------------------------------------------------------
void mass01::Create(int n)
{
    k=n;
    n=n/8+1;
    a=new char[n];
}
//---------------------------------------------------------------------------
mass01::mass01()
{
    k=0;
    a=NULL;
}
//---------------------------------------------------------------------------
int mass01::GetBit(int n)
{
    if(n>=k || n<0)
    {
        return -1;
    }
    return ReadBit(a[n/8],n-n/8);
}
//---------------------------------------------------------------------------
int mass01::SetBit(int n,int z)
{
    if(n>=k || n<0)
    {
        return -1;
    }
    if(z!=0)
    {
        z=1;
    }
    WriteBit1(a[n/8],n-n/8);
    return 1;
}
//---------------------------------------------------------------------------
void mass01::PrintfAll()
{
    int i;
    for(i=0;i<k;i++)
    {
        printf("%d",GetBit(i));
    }
}
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
//---------------------------------------------------------------------------
#pragma package(smart_init)
 